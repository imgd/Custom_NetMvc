<?xml version="1.0" encoding="UTF-8"?>
<configuration>
	<appSettings>
		<!--DataSoureceKind 表示不同的数据访问方式，目前支持三个可选的配置值（注意大小写）：
			1. XmlFile ，表示使用XML文件中的数据，此选项为默认值。
			2. XmlCommand ，表示使用配置文件中的SQL命令去访问SQLSERVER
			3. StoreProcedure ，表示调用SQLSERVER中的存储过程去访问数据库
			你可以修改下面的配置，并结合ClownFishSQLProfiler.exe工具去观察它们的差别。		
		-->
		<add key="DataSoureceKind" value="XmlFile" />
	</appSettings>
	<connectionStrings>
		<clear/>
		<add name="MyNorthwind"
			connectionString="server=localhost\sqlexpress;database=MyNorthwind;Integrated Security=SSPI;"
			providerName="System.Data.SqlClient"/>
	</connectionStrings>
	<system.web>
		<compilation debug="true">
			<assemblies>
				<add assembly="System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
				<add assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
			</assemblies>
		</compilation>
		<authentication mode="Forms">
			<forms cookieless="UseCookies" name="MyMVCDEMO"></forms>
		</authentication>

		<pages enableViewState="false" enableViewStateMac="false" 
			   enableSessionState="false" autoEventWireup="false" validateRequest="false" 			   
			   pageParserFilterType="MyMVC.ViewTypeParserFilter, MyMVC" 
			   pageBaseType="MyMVC.MyBasePage, MyMVC" 
			   userControlBaseType="MyMVC.MyBaseUserControl, MyMVC">
			<namespaces>
				<add namespace="MyMVC" />
				<add namespace="WebSiteCommonLib" />
				<add namespace="WebSiteModel" />
			</namespaces>
			<controls>
				<add tagPrefix="fish" tagName="MainMenu" src="~/Controls/MainMenu.ascx" />
				<add tagPrefix="fish" tagName="PageHeader" src="~/Controls/PageHeader.ascx" />
			</controls>
		</pages>
		<httpHandlers>
			<add path="/ajax/*/*" verb="*" type="AjaxServiceHandlerFactory" validate="true" />
			<add path="*.cspx" verb="*" type="MyMVC.AjaxHandlerFactory, MyMVC" validate="true" />
			<!-- 上面二个httphander，在实际项目中只需要使用一个就行了，可根据情况自由选择。-->
			<add path="*.aspx" verb="*" type="MyMVC.MvcPageHandlerFactory, MyMVC" validate="true" />
			<add path="/mvc/*" verb="*" type="MyMVC.MvcPageHandlerFactory, MyMVC" validate="true" />
		</httpHandlers>
		<httpModules>
			<add name="SetOutputCacheModule" type="MyMVC.SetOutputCacheModule, MyMVC"/>
			<add name="GzipModule" type="MyMVC.GzipModule, MyMVC"/>
		</httpModules>
	</system.web>
	
	<system.codedom>
		<compilers>
			<compiler language="c#;cs;csharp" extension=".cs" warningLevel="4" type="Microsoft.CSharp.CSharpCodeProvider, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
				<providerOption name="CompilerVersion" value="v3.5" />
				<providerOption name="WarnAsError" value="false" />
			</compiler>
		</compilers>
	</system.codedom>

	<system.webServer>
		<validation validateIntegratedModeConfiguration="false" />
		<handlers>
			<add name="AjaxServiceHandlerFactory" verb="*" path="/ajax/*" type="AjaxServiceHandlerFactory" preCondition="integratedMode" />
			<add name="AjaxHandlerFactory" verb="*" path="*.cspx" type="MyMVC.AjaxHandlerFactory, MyMVC" preCondition="integratedMode" />
			<!-- 上面二个httphander，在实际项目中只需要使用一个就行了，可根据情况自由选择。-->
			<add name="MvcPageHandlerFactory" verb="*" path="*.aspx" type="MyMVC.MvcPageHandlerFactory, MyMVC" preCondition="integratedMode" />
			<add name="MvcPageHandlerFactory2" verb="*" path="/mvc/*" type="MyMVC.MvcPageHandlerFactory, MyMVC" preCondition="integratedMode" />
		</handlers>
		<modules>
			<add name="SetOutputCacheModule" type="MyMVC.SetOutputCacheModule, MyMVC" preCondition="integratedMode" />
		</modules>
	</system.webServer>

</configuration>
